version: 2.1
description: "Jobs and commands for integrating tracing-style spans into your circleci pipeline workflows, for use with honeycomb.io. \n"
display:
    source_url: https://github.com/ThoughtWorks-DPS/orb-honeycomb-build-events
commands:
    start-trace:
        description: |
            start_trace should be run in a job all on its own at the very beginning of
            a build. This job initializes the buildevents config, downloads the
            buildevents binary, and otherwise gets the build environment ready for the
            rest of the jobs.
        parameters:
            buildevents-install:
                default: false
                description: install the specified version
                type: boolean
            buildevents-version:
                default: ""
                description: specify the installed buildevents version
                type: string
        steps:
            - run:
                command: date +%s > build_start
                name: record build start time
            - when:
                condition: << parameters.buildevents-install >>
                steps:
                    - run:
                        command: |
                            sudo bash -c "curl -q -L -o /usr/local/bin/buildevents https://github.com/honeycombio/buildevents/releases/download/v<< parameters.buildevents-version >>/buildevents-linux-amd64"
                            sudo chmod +x /usr/local/bin/buildevents
                        name: install honeycomb buildevents version << parameters.buildevents-version >>
            - save_cache:
                key: buildevents-v<< parameters.buildevents-version >>{{ .Environment.BUILDEVENTS_CACHE_VERSION }}
                paths:
                    - /tmp
            - run:
                command: |
                    source $BASH_ENV
                    buildevents step $CIRCLE_WORKFLOW_ID setup $(cat build_start) start_trace
                name: report start step
    watch:
        description: |
            watch will poll the CircleCI API to determine when the
            build is done. It should be its own job dependent on the job that runs
            start_trace, and no job should depend on it finishing.
        parameters:
            buildevents-version:
                default: ""
                description: specify the installed buildevents version
                type: string
            timeout:
                default: 20
                description: Timeout after which we consider the build failed, in minutes. Should be at least double your longest expected build.
                type: integer
        steps:
            - run:
                command: |
                    source $BASH_ENV
                    export BUILDEVENT_TIMEOUT=<< parameters.timeout >>
                    buildevents watch $CIRCLE_WORKFLOW_ID
                name: watch then finish build trace
executors:
    circleci-base-image:
        description: "By default the orb will use twdps/circleci-base-image:alpine-stable as the executor image. \nYou can override to use your own executor keeping in mind you will need sudo and curl on\nthe image to successfully install terraform. See the setup-packages command for details.\n\nSee https://github.com/ThoughtWorks-DPS/circleci-base-image\n"
        docker:
            - image: << parameters.executor-image >>
        parameters:
            executor-image:
                default: twdps/circleci-base-image:alpine-stable
                description: available override
                type: string
            resource-class:
                default: medium
                enum:
                    - small
                    - medium
                    - medium+
                    - large
                    - xlarge
                    - 2xlarge
                    - 2xlarge+
                type: enum
        resource_class: << parameters.resource-class >>
jobs:
    trace-workflow:
        description: Start honeycomb buildevents trace watcher
        executor:
            executor-image: << parameters.executor-image >>
            name: circleci-base-image
            resource-class: << parameters.resource-class >>
        parameters:
            before-start:
                default: []
                description: Optional steps to run before start-trace commands
                type: steps
            buildevents-install:
                default: false
                description: install the specified version
                type: boolean
            buildevents-version:
                default: ""
                description: specify the installed buildevents version
                type: string
            executor-image:
                default: docker.io/twdps/circleci-base-image:alpine-stable
                description: available override
                type: string
            resource-class:
                default: medium
                enum:
                    - small
                    - medium
                    - medium+
                    - large
                    - xlarge
                    - 2xlarge
                    - 2xlarge+
                type: enum
            shell:
                default: /bin/sh -eo pipefail
                description: default shell invocation. Override to support different shells or tools like secrethub.io
                type: string
            timeout:
                default: 20
                description: Timeout after which we consider the build failed, in minutes. Should be at least double your longest expected build.
                type: integer
        shell: << parameters.shell >>
        steps:
            - when:
                condition: << parameters.before-start >>
                steps: << parameters.before-start >>
            - start-trace:
                buildevents-install: << parameters.buildevents-install >>
                buildevents-version: << parameters.buildevents-version >>
            - watch:
                buildevents-version: << parameters.buildevents-version >>
                timeout: << parameters.timeout >>

